#!/bin/bash

# This script takes inspiration from Chetan Surpur's blog post http://chetansurpur.com/blog/2010/11/magic-work-cycle.html
# I used to use http://www.magicworkcycle.com/ but the slowness of my intertubes connection (the bell sound was getting torn apart) led me to yearn for an offline equivalent.

# Quick thanks to http://linuxhelp.blogspot.com/2005/10/10-seconds-guide-to-bash-shell.html
# I plan to add neatness with tput: http://www.ibm.com/developerworks/aix/library/au-learningtput/index.html
# Maybe ncurses?!

# Also, must add in future: ASCII graphic of an Elvin Gerbil solemnly dancing the mazurka during play time, and coding during work time.

#Thanks to Manoj Mardithaya for suggesting the purple functionality.

# ADD SOON: Make the code neat! Add functions, etc.
# Once functions are added, echo the usage whenever errors are encountered.

args=$*
pur=0

def30=3
def60=3

if [ $# -eq 4 ] #30slash30 -purple WORK PLAY X
then
    if [[ $args = *-purple* ]]
    then
        pur=1
        S0MIN=$2
        S1MIN=$3
        ch=$4
    else
            echo "Error! Wrong syntax." > /dev/stderr
            exit 1
    fi
elif [ $# -eq 3 ] #30slash30 WORK PLAY X
then
	S0MIN=$1
	S1MIN=$2
	ch=$3
elif [ $# -eq 2 ] #30slash30 -purple X
then
    if [[ $args = *-purple* ]]
    then
        pur=1
        S0MIN=$def30
        S1MIN=$def30
        ch=$2
    else
            echo "Error! Wrong syntax." > /dev/stderr
            exit 1
    fi
elif [ $# -eq 1 ] #30slash30 X
then
    if ! [ "$args" -eq "$args" 2> /dev/null ]
    then
        echo "Error! Wrong syntax." > /dev/stderr
        exit 1
    else
	    S0MIN=$def30
	    S1MIN=$def30
	    ch=$1
    fi
else
   	echo 'Usage: 30slash30 [-purple] [WORKMINUTES PLAYMINUTES] X'
    echo 'Where X is 1 if you want to play first, and not 1 if you want to work first.'
    echo 'Set attribute -purple if you want your Purple status changed.'
    exit 
fi
#############################################

	S0MIN=`expr $S0MIN - 1`
	S1MIN=`expr $S1MIN - 1`
	SECINMIN=`expr $def60 - 1`
	
	if [ $ch -eq 1 ]
	then
		S0='Play'
		S1='Work'
		if [ $pur -eq 1 ]
		then
		    purmsg0='available'
		    purmsg1='unavailable'
		fi
	else
		S0='Work'
		S1='Play'
		if [ $pur -eq 1 ]
		then
		    purmsg0='unavailable'
		    purmsg1='available'
		fi
	fi

	clear
	
	while [ 1 ]
	do
	
	    if [ $pur -eq 1 ]
		then
	        purple-remote "setstatus?status=$purmsg0"
		fi
	    
		i=$S0MIN
		while [ $i -ge 0 ]
		do
			j=$SECINMIN
			while [ $j -ge 0 ]
			do
				echo $S0
				echo $i ':' $j
				sleep 1
				j=`expr $j - 1`
				clear
			done
			i=`expr $i - 1`
		done
	
		cvlc /usr/share/sounds/ubuntu/stereo/phone-outgoing-busy.ogg 2> /dev/null &

	    if [ $pur -eq 1 ]
		then
	        purple-remote "setstatus?status=$purmsg1"
		fi
		
		i=$S1MIN
		while [ $i -ge 0 ]
		do
			j=$SECINMIN
			while [ $j -ge 0 ]
			do
				echo $S1
				echo $i ':' $j
				sleep 1
				j=`expr $j - 1`
				clear
			done
			i=`expr $i - 1`
		done
	
		cvlc /usr/share/sounds/ubuntu/stereo/phone-outgoing-busy.ogg 2> /dev/null &
	done
fi
